{"ast":null,"code":"var _jsxFileName = \"/home/vassil/Documents/uni/sem9/gadna_java/my-static-react-app/src/screenContent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport DynamicDiv from './dynamicDiv';\nimport AddEntry from './addEntry';\nimport LoginForm from './loginForm';\nimport SignupForm from './signupForm';\nimport CurrentPage from './state_enum';\nimport BrowseEntries from './browseEntries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenContent = () => {\n  _s();\n  const myContent = () => {\n    switch (window.currentPage) {\n      // Different returns here\n      case CurrentPage.Signup:\n        return /*#__PURE__*/_jsxDEV(SignupForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 28\n        }, this);\n        // code block\n        break;\n      case CurrentPage.Login:\n        return /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 28\n        }, this);\n        // code block\n        break;\n      case CurrentPage.AddNew:\n        return /*#__PURE__*/_jsxDEV(AddEntry, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 28\n        }, this);\n        break;\n      case CurrentPage.Browse:\n        return /*#__PURE__*/_jsxDEV(BrowseEntries, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }, this);\n        break;\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid state. Can't open page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 28\n        }, this);\n\n      // code block\n    }\n    return /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this);\n  };\n  useEffect(() => {\n    const handlePageChange = () => {\n      setCurrentPage(window.currentPage); // Update React state when global state changes\n    };\n    window.addEventListener('currentPageChange', handlePageChange);\n    return () => {\n      window.removeEventListener('currentPageChange', handlePageChange);\n    };\n  }, []); // Empty dependency array to run only on mount\n\n  return /*#__PURE__*/_jsxDEV(DynamicDiv, {\n    content: myContent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ScreenContent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ScreenContent;\nexport default ScreenContent;\nvar _c;\n$RefreshReg$(_c, \"ScreenContent\");","map":{"version":3,"names":["React","DynamicDiv","AddEntry","LoginForm","SignupForm","CurrentPage","BrowseEntries","jsxDEV","_jsxDEV","ScreenContent","_s","myContent","window","currentPage","Signup","fileName","_jsxFileName","lineNumber","columnNumber","Login","AddNew","Browse","children","useEffect","handlePageChange","setCurrentPage","addEventListener","removeEventListener","content","_c","$RefreshReg$"],"sources":["/home/vassil/Documents/uni/sem9/gadna_java/my-static-react-app/src/screenContent.js"],"sourcesContent":["import React from 'react';\nimport DynamicDiv from './dynamicDiv';\nimport AddEntry from './addEntry';\nimport LoginForm from './loginForm';\nimport SignupForm from './signupForm';\nimport CurrentPage from './state_enum'\nimport BrowseEntries from './browseEntries'\n\nconst ScreenContent = () =>\n{\n    const myContent = () => \n        {\n            switch(window.currentPage) { // Different returns here\n                case CurrentPage.Signup:\n                    return <SignupForm/>;\n                // code block\n                break;\n                case CurrentPage.Login:\n                    return <LoginForm/>;\n                // code block\n                break;\n                case CurrentPage.AddNew:\n                    return <AddEntry/>\n                break;\n                case CurrentPage.Browse:\n                    return <BrowseEntries/>\n                break;\n                default:\n                    return <p>Invalid state. Can't open page.</p>\n\n                // code block\n            } \n            return <LoginForm/>;\n        }\n\n        useEffect(() => {\n            const handlePageChange = () => {\n              setCurrentPage(window.currentPage); // Update React state when global state changes\n            };\n\n            window.addEventListener('currentPageChange', handlePageChange);\n\n            return () => {\n                window.removeEventListener('currentPageChange', handlePageChange);\n              };\n            }, []); // Empty dependency array to run only on mount\n\n    return(\n        <DynamicDiv content={myContent()} />\n    );\n}\n\nexport default ScreenContent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,aAAa,GAAGA,CAAA,KACtB;EAAAC,EAAA;EACI,MAAMC,SAAS,GAAGA,CAAA,KACd;IACI,QAAOC,MAAM,CAACC,WAAW;MAAI;MACzB,KAAKR,WAAW,CAACS,MAAM;QACnB,oBAAON,OAAA,CAACJ,UAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QACxB;QACA;MACA,KAAKb,WAAW,CAACc,KAAK;QAClB,oBAAOX,OAAA,CAACL,SAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QACvB;QACA;MACA,KAAKb,WAAW,CAACe,MAAM;QACnB,oBAAOZ,OAAA,CAACN,QAAQ;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QACtB;MACA,KAAKb,WAAW,CAACgB,MAAM;QACnB,oBAAOb,OAAA,CAACF,aAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;QAC3B;MACA;QACI,oBAAOV,OAAA;UAAAc,QAAA,EAAG;QAA+B;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;;MAEjD;IACJ;IACA,oBAAOV,OAAA,CAACL,SAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EACvB,CAAC;EAEDK,SAAS,CAAC,MAAM;IACZ,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7BC,cAAc,CAACb,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAEDD,MAAM,CAACc,gBAAgB,CAAC,mBAAmB,EAAEF,gBAAgB,CAAC;IAE9D,OAAO,MAAM;MACTZ,MAAM,CAACe,mBAAmB,CAAC,mBAAmB,EAAEH,gBAAgB,CAAC;IACnE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEhB,oBACIhB,OAAA,CAACP,UAAU;IAAC2B,OAAO,EAAEjB,SAAS,CAAC;EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5C,CAAC;AAAAR,EAAA,CA1CKD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}