{"ast":null,"code":"var _jsxFileName = \"/home/vassil/Documents/uni/sem9/gadna_java/my-static-react-app/src/pageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport CurrentPage from './state_enum'; // Import the enum for page states\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PageContext = /*#__PURE__*/createContext();\n\n// Create the provider to wrap your application\nexport const PageProvider = ({\n  children\n}) => {\n  _s();\n  // State to hold the current page\n  const [currentPage, setCurrentPage] = useState(CurrentPage.Login); // Default to 'Login' page\n\n  return /*#__PURE__*/_jsxDEV(PageContext.Provider, {\n    value: {\n      currentPage,\n      setCurrentPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to access the currentPage and setCurrentPage in any component\n_s(PageProvider, \"/Hk9bF0DPMgpm6oNUtysD1NbZlM=\");\n_c = PageProvider;\nexport const usePage = () => {\n  _s2();\n  return useContext(PageContext);\n};\n_s2(usePage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","CurrentPage","jsxDEV","_jsxDEV","PageContext","PageProvider","children","_s","currentPage","setCurrentPage","Login","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePage","_s2","$RefreshReg$"],"sources":["/home/vassil/Documents/uni/sem9/gadna_java/my-static-react-app/src/pageContext.js"],"sourcesContent":["\nimport React, { createContext, useState, useContext } from 'react';\nimport CurrentPage from './state_enum'; // Import the enum for page states\n\n// Create the context\nconst PageContext = createContext();\n\n// Create the provider to wrap your application\nexport const PageProvider = ({ children }) => {\n  // State to hold the current page\n  const [currentPage, setCurrentPage] = useState(CurrentPage.Login); // Default to 'Login' page\n\n  return (\n    <PageContext.Provider value={{ currentPage, setCurrentPage }}>\n      {children}\n    </PageContext.Provider>\n  );\n};\n\n// Custom hook to access the currentPage and setCurrentPage in any component\nexport const usePage = () => {\n  return useContext(PageContext);\n};"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,OAAOC,WAAW,MAAM,cAAc,CAAC,CAAC;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACE,WAAW,CAACS,KAAK,CAAC,CAAC,CAAC;;EAEnE,oBACEP,OAAA,CAACC,WAAW,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EAC1DA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAT,EAAA,CAXaF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAYzB,OAAO,MAAMa,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOnB,UAAU,CAACI,WAAW,CAAC;AAChC,CAAC;AAACe,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}