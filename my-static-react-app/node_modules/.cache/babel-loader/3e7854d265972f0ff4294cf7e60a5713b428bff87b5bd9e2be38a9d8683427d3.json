{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst cloneDeep = require(\"lodash.clonedeep\");\nconst isEqual = require(\"lodash.isequal\");\nvar AttributeMap;\n(function (AttributeMap) {\n  function compose() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let keepNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    let attributes = cloneDeep(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== undefined && b[key] === undefined) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n  AttributeMap.compose = compose;\n  function diff() {\n    let a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    const attributes = Object.keys(a).concat(Object.keys(b)).reduce((attrs, key) => {\n      if (!isEqual(a[key], b[key])) {\n        attrs[key] = b[key] === undefined ? null : b[key];\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n  AttributeMap.diff = diff;\n  function invert() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== undefined) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === undefined) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n  AttributeMap.invert = invert;\n  function transform(a, b) {\n    let priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (typeof a !== 'object') {\n      return b;\n    }\n    if (typeof b !== 'object') {\n      return undefined;\n    }\n    if (!priority) {\n      return b; // b simply overwrites us without priority\n    }\n    const attributes = Object.keys(b).reduce((attrs, key) => {\n      if (a[key] === undefined) {\n        attrs[key] = b[key]; // null is a valid value\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n  AttributeMap.transform = transform;\n})(AttributeMap || (AttributeMap = {}));\nexports.default = AttributeMap;","map":{"version":3,"names":["cloneDeep","require","isEqual","AttributeMap","compose","a","arguments","length","undefined","b","keepNull","attributes","Object","keys","reduce","copy","key","diff","concat","attrs","invert","attr","base","baseInverted","memo","transform","priority","exports","default"],"sources":["/home/vassil/Documents/uni/sem9/gadna_java/my-static-react-app/node_modules/quill-delta/src/AttributeMap.ts"],"sourcesContent":["import cloneDeep = require('lodash.clonedeep');\nimport isEqual = require('lodash.isequal');\n\ninterface AttributeMap {\n  [key: string]: unknown;\n}\n\nnamespace AttributeMap {\n  export function compose(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n    keepNull = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    let attributes = cloneDeep(b);\n    if (!keepNull) {\n      attributes = Object.keys(attributes).reduce<AttributeMap>((copy, key) => {\n        if (attributes[key] != null) {\n          copy[key] = attributes[key];\n        }\n        return copy;\n      }, {});\n    }\n    for (const key in a) {\n      if (a[key] !== undefined && b[key] === undefined) {\n        attributes[key] = a[key];\n      }\n    }\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function diff(\n    a: AttributeMap = {},\n    b: AttributeMap = {},\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      a = {};\n    }\n    if (typeof b !== 'object') {\n      b = {};\n    }\n    const attributes = Object.keys(a)\n      .concat(Object.keys(b))\n      .reduce<AttributeMap>((attrs, key) => {\n        if (!isEqual(a[key], b[key])) {\n          attrs[key] = b[key] === undefined ? null : b[key];\n        }\n        return attrs;\n      }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n\n  export function invert(\n    attr: AttributeMap = {},\n    base: AttributeMap = {},\n  ): AttributeMap {\n    attr = attr || {};\n    const baseInverted = Object.keys(base).reduce<AttributeMap>((memo, key) => {\n      if (base[key] !== attr[key] && attr[key] !== undefined) {\n        memo[key] = base[key];\n      }\n      return memo;\n    }, {});\n    return Object.keys(attr).reduce<AttributeMap>((memo, key) => {\n      if (attr[key] !== base[key] && base[key] === undefined) {\n        memo[key] = null;\n      }\n      return memo;\n    }, baseInverted);\n  }\n\n  export function transform(\n    a: AttributeMap | undefined,\n    b: AttributeMap | undefined,\n    priority = false,\n  ): AttributeMap | undefined {\n    if (typeof a !== 'object') {\n      return b;\n    }\n    if (typeof b !== 'object') {\n      return undefined;\n    }\n    if (!priority) {\n      return b; // b simply overwrites us without priority\n    }\n    const attributes = Object.keys(b).reduce<AttributeMap>((attrs, key) => {\n      if (a[key] === undefined) {\n        attrs[key] = b[key]; // null is a valid value\n      }\n      return attrs;\n    }, {});\n    return Object.keys(attributes).length > 0 ? attributes : undefined;\n  }\n}\n\nexport default AttributeMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}